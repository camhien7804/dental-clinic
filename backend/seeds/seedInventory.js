// backend/seeds/seedInventory.js
import mongoose from "mongoose";
import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

import InventoryItem from "../models/inventoryItem.js";
import User from "../models/user.js";

// ‚úÖ Load config.env ƒë√∫ng ch·ªó, kh√¥ng ph·ª• thu·ªôc th∆∞ m·ª•c ch·∫°y
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
dotenv.config({ path: path.join(__dirname, "../config.env") });

const mongoUri = process.env.MONGO_URI || process.env.MONGODB_URL;

async function seedInventory() {
  try {
    console.log("üîç MONGO_URI =", mongoUri);
    if (!mongoUri) throw new Error("MONGO_URI kh√¥ng t·ªìn t·∫°i trong config.env");

    await mongoose.connect(mongoUri);
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng");

    // t√¨m user admin
    let createdBy = null;
    try {
      const adminUser = await User.findOne({ role: "admin" });
      if (adminUser) {
        createdBy = adminUser._id;
        console.log("üë§ G√°n createdBy =", createdBy.toString());
      } else {
        console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y admin, createdBy = null");
      }
    } catch {
      console.log("‚ö†Ô∏è Kh√¥ng query ƒë∆∞·ª£c user, createdBy = null");
    }

    // danh s√°ch 30 v·∫≠t t∆∞ m·∫´u
    const items = [
      { sku: "BT001", name: "Bao tay y t·∫ø", quantity: 100, unit: "pcs", minQuantity: 10, note: "D√πng 1 l·∫ßn, latex kh√¥ng b·ªôt", createdBy },
      { sku: "KM001", name: "Kh·∫©u trang y t·∫ø 3 l·ªõp", quantity: 200, unit: "pcs", minQuantity: 20, note: "D√πng cho b√°c sƒ© v√† b·ªánh nh√¢n", createdBy },
      { sku: "TT001", name: "Thu·ªëc t√™ Lidocain 2%", quantity: 50, unit: "l·ªç", minQuantity: 5, note: "D√πng trong nh·ªï rƒÉng, ti·ªÉu ph·∫´u", createdBy },
      { sku: "CT001", name: "Ch·ªâ nha khoa", quantity: 80, unit: "cu·ªôn", minQuantity: 10, note: "H·ªó tr·ª£ chƒÉm s√≥c sau ƒëi·ªÅu tr·ªã", createdBy },
      { sku: "KT001", name: "Kim ti√™m nha khoa", quantity: 150, unit: "c√°i", minQuantity: 15, note: "Kim v√¥ tr√πng", createdBy },
      { sku: "VT001", name: "V·∫≠t li·ªáu tr√°m Composite", quantity: 30, unit: "tu√Ωp", minQuantity: 5, note: "Tr√°m th·∫©m m·ªπ", createdBy },
      { sku: "DL001", name: "Dung d·ªãch s√°t khu·∫©n", quantity: 20, unit: "chai", minQuantity: 3, note: "D√πng tr∆∞·ªõc/sau ƒëi·ªÅu tr·ªã", createdBy },
      { sku: "CC001", name: "C·ªëc gi·∫•y s√∫c mi·ªáng", quantity: 500, unit: "pcs", minQuantity: 50, note: "D√πng 1 l·∫ßn", createdBy },
      { sku: "DC001", name: "D·ª•ng c·ª• n·∫°y", quantity: 25, unit: "c√°i", minQuantity: 3, note: "D·ª•ng c·ª• kh√°m nha khoa", createdBy },
      { sku: "MG001", name: "G∆∞∆°ng nha khoa", quantity: 40, unit: "c√°i", minQuantity: 5, note: "Kh√°m v√† ki·ªÉm tra rƒÉng", createdBy },
      { sku: "KL001", name: "K√¨m nh·ªï rƒÉng", quantity: 15, unit: "c√°i", minQuantity: 2, note: "D√πng trong ti·ªÉu ph·∫´u", createdBy },
      { sku: "NQ001", name: "Nha chu qu·∫£n", quantity: 30, unit: "c√°i", minQuantity: 5, note: "D·ª•ng c·ª• ƒëi·ªÅu tr·ªã nha chu", createdBy },
      { sku: "XM001", name: "Xi mƒÉng nha khoa", quantity: 25, unit: "l·ªç", minQuantity: 5, note: "D√πng trong tr√°m v√† ph·ª•c h√¨nh", createdBy },
      { sku: "AO001", name: "Alginat l·∫•y d·∫•u", quantity: 20, unit: "t√∫i", minQuantity: 3, note: "D√πng l·∫•y d·∫•u rƒÉng", createdBy },
      { sku: "BS001", name: "B√¥ng g√≤n y t·∫ø", quantity: 300, unit: "g√≥i", minQuantity: 30, note: "D√πng c·∫ßm m√°u v√† v·ªá sinh", createdBy },
      { sku: "ND001", name: "N∆∞·ªõc s√∫c mi·ªáng s√°t khu·∫©n", quantity: 40, unit: "chai", minQuantity: 5, note: "Cho b·ªánh nh√¢n sau ƒëi·ªÅu tr·ªã", createdBy },
      { sku: "MT001", name: "M·∫∑t n·∫° ph·∫´u thu·∫≠t", quantity: 60, unit: "pcs", minQuantity: 10, note: "B·∫£o h·ªô b√°c sƒ©", createdBy },
      { sku: "GA001", name: "G·∫°c v√¥ tr√πng", quantity: 200, unit: "pcs", minQuantity: 20, note: "Thay bƒÉng v·∫øt th∆∞∆°ng", createdBy },
      { sku: "BP001", name: "B∆°m ti√™m 5ml", quantity: 100, unit: "c√°i", minQuantity: 10, note: "D√πng cho thu·ªëc t√™", createdBy },
      { sku: "BP002", name: "B∆°m ti√™m 10ml", quantity: 80, unit: "c√°i", minQuantity: 10, note: "D√πng trong truy·ªÅn d·ªãch nh·ªè", createdBy },
      { sku: "TD001", name: "Thu·ªëc gi·∫£m ƒëau Paracetamol", quantity: 100, unit: "v·ªâ", minQuantity: 10, note: "Gi·∫£m ƒëau sau ƒëi·ªÅu tr·ªã", createdBy },
      { sku: "KS001", name: "Kh√°ng sinh Amoxicillin", quantity: 70, unit: "h·ªôp", minQuantity: 5, note: "D√πng cho b·ªánh nh√¢n sau ph·∫´u thu·∫≠t", createdBy },
      { sku: "KS002", name: "Kh√°ng sinh Metronidazole", quantity: 60, unit: "h·ªôp", minQuantity: 5, note: "ƒêi·ªÅu tr·ªã vi√™m nhi·ªÖm", createdBy },
      { sku: "NC001", name: "N∆∞·ªõc c·∫•t pha lo√£ng", quantity: 50, unit: "chai", minQuantity: 5, note: "D√πng pha thu·ªëc", createdBy },
      { sku: "TB001", name: "Thun ch·ªânh nha", quantity: 200, unit: "pcs", minQuantity: 20, note: "H·ªó tr·ª£ ni·ªÅng rƒÉng", createdBy },
      { sku: "NB001", name: "N√∫t b√¥ng ch·∫∑n m√°u", quantity: 150, unit: "pcs", minQuantity: 15, note: "D√πng khi nh·ªï rƒÉng", createdBy },
      { sku: "KL002", name: "K√¨m b·∫ª d√¢y ch·ªânh nha", quantity: 10, unit: "c√°i", minQuantity: 2, note: "D√πng trong ch·ªânh nha", createdBy },
      { sku: "DD001", name: "ƒê√®n tr√°m quang tr√πng h·ª£p", quantity: 5, unit: "c√°i", minQuantity: 1, note: "Thi·∫øt b·ªã h·ªó tr·ª£ tr√°m", createdBy },
      { sku: "ML001", name: "M√°y l·∫•y cao rƒÉng si√™u √¢m", quantity: 3, unit: "c√°i", minQuantity: 1, note: "Thi·∫øt b·ªã ƒëi·ªÅu tr·ªã nha khoa", createdBy },
      { sku: "GH001", name: "Gh·∫ø nha khoa", quantity: 2, unit: "c√°i", minQuantity: 1, note: "Trang thi·∫øt b·ªã ch√≠nh", createdBy },
    ];

    for (const item of items) {
      const exists = await InventoryItem.findOne({ sku: item.sku });
      if (!exists) {
        await InventoryItem.create(item);
        console.log("‚ûï ƒê√£ th√™m:", item.name);
      } else {
        console.log("‚úÖ ƒê√£ t·ªìn t·∫°i:", item.name);
      }
    }

    console.log("üéâ Seed xong Inventory!");
    process.exit();
  } catch (err) {
    console.error("‚ùå L·ªói seed:", err.message);
    process.exit(1);
  }
}

seedInventory();
